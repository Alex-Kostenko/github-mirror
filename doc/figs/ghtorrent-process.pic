.PS
copy "sequence.pic";

# Object definition
object(E,"EventMirror");
object(G,"GHTorrent");
object(R,"Retriever");
object(P,"Persister");
object(A,"APIClient");
object(GH,"GithubAPI");
step();

# Message exchange
active(E);
message(E,G,"ensure_pullreq(p, id)");
active(G);
message(G,G,"ensure_project_owner(p)");
message(G,G,"ensure_project(p)");
message(G,R,"retrieve_pullreq(p, id)");
active(R);
message(R,P,"find_pullreq(p, id)");
active(P);
message(R,A,"get_pullreq(p, id)");
active(A);
message(A,GH, "GET /repo/pullreq/id");
active(GH);
return_message(GH,A)
inactive(GH);
message(A,A,"cache_http()");
return_message(A,R)
inactive(A);
message(R,P,"store_pullreq(p, id)");
return_message(P,R);
inactive(P);
return_message(R,G, "pull_req_json");
inactive(R);
message(G,G,"proc_save_pullreq(p, id)");
return_message(G,E, "pull_req");

complete(E);
complete(G);
complete(R);
complete(P);
complete(A);
complete(GH);

.PE

